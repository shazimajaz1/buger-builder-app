{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shazim\\\\WebstormProjects\\\\buger-builder-app\\\\src\\\\components\\\\Burger\\\\BurgerIngredient\\\\BurgerIngredient.js\";\nimport React, { Component } from 'react';\nimport classes from './BurgerIngredient.css';\nimport PropTypes from 'prop-types';\n/*\r\n    This functions returns the new JSX for the ingredients.\r\n */\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null; //Select which ingredient to render based on the string passed.\n\n    switch (this.props.type) {\n      case 'bread-bottom':\n        ingredient = React.createElement(\"div\", {\n          className: classes.BreadBottom,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        });\n        break;\n\n      case 'bread-top':\n        ingredient = React.createElement(\"div\", {\n          className: classes.BreadTop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: classes.Seeds1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: classes.Seeds2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }));\n        break;\n\n      case 'meat':\n        ingredient = React.createElement(\"div\", {\n          className: classes.Meat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n        break;\n\n      case 'cheese':\n        ingredient = React.createElement(\"div\", {\n          className: classes.Cheese,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n        break;\n\n      case 'Salad':\n        ingredient = React.createElement(\"div\", {\n          className: classes.Salad,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n        break;\n\n      case 'Bacon':\n        ingredient = React.createElement(\"div\", {\n          className: classes.Bacon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n        break;\n\n      default:\n        ingredient = null;\n    }\n\n    return ingredient;\n  }\n\n} //Confirm the tpe of passed parameters to ensure that no other value other than\n//a string is passed.\n//This will throw a warning indicating to the user that the the type of prop passed\n//should be a string.\n\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\nexport default BurgerIngredient;","map":{"version":3,"sources":["C:/Users/Shazim/WebstormProjects/buger-builder-app/src/components/Burger/BurgerIngredient/BurgerIngredient.js"],"names":["React","Component","classes","PropTypes","BurgerIngredient","render","ingredient","props","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA;;;;AAGA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAwC;AACpCI,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,IAAjB,CADK,CAGL;;AACA,YAAQ,KAAKC,KAAL,CAAWC,IAAnB;AACI,WAAM,cAAN;AACIF,QAAAA,UAAU,GAAG;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACO,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA;;AACJ,WAAM,WAAN;AACIH,QAAAA,UAAU,GACN;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACQ,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAER,OAAO,CAACS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAET,OAAO,CAACU,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAOA;;AACJ,WAAM,MAAN;AACIN,QAAAA,UAAU,GAAG;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACW,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA;;AACJ,WAAM,QAAN;AACIP,QAAAA,UAAU,GAAG;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA;;AACJ,WAAM,OAAN;AACIR,QAAAA,UAAU,GAAG;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACa,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA;;AACJ,WAAM,OAAN;AACIT,QAAAA,UAAU,GAAG;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACc,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACA;;AACJ;AACIV,QAAAA,UAAU,GAAG,IAAb;AA1BR;;AA8BA,WAAOA,UAAP;AACH;;AApCmC,C,CAuCxC;AACA;AACA;AACA;;;AACAF,gBAAgB,CAACa,SAAjB,GAA2B;AACvBT,EAAAA,IAAI,EAAEL,SAAS,CAACe,MAAV,CAAiBC;AADA,CAA3B;AAGA,eAAef,gBAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport classes from './BurgerIngredient.css'\r\nimport PropTypes from 'prop-types'\r\n/*\r\n    This functions returns the new JSX for the ingredients.\r\n */\r\nclass BurgerIngredient extends Component{\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        //Select which ingredient to render based on the string passed.\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('Salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case ('Bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\n//Confirm the tpe of passed parameters to ensure that no other value other than\r\n//a string is passed.\r\n//This will throw a warning indicating to the user that the the type of prop passed\r\n//should be a string.\r\nBurgerIngredient.propTypes={\r\n    type: PropTypes.string.isRequired\r\n};\r\nexport default BurgerIngredient;"]},"metadata":{},"sourceType":"module"}